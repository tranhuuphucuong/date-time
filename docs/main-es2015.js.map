{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/utils/timezone.ts","./src/app/date-time/date-time.component.ts","./src/app/date-time/date-time.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { format } from 'date-fns'\nimport { formatToTimeZone } from 'src/utils/timezone';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  date = new Date();\n  year = '';\n  month = '';\n  day = '';\n  hour = '';\n  minute = '';\n  second = '';\n  milliseconds = '';\n\n  dateTime = {};\n  dateTimeUTC = {};\n  dateTimeLocal = {};\n\n  dateTimeCustom = 'abcd';\n\n\n  timestamp = Date.now();\n\n  ngOnInit() {\n    setInterval(() => {\n\n      const now = new Date();\n      this.dateTimeCustom = formatToTimeZone(\n        now,\n        'yyyy MM dd, HH:mm:ss.SSS',\n        {timeZone: 'Asia/Tokyo'}\n      )\n      \n      this.year = format(now, 'yyyy');\n      this.month = format(now, 'MM');\n      this.day = format(now, 'dd');\n      this.hour = format(now, 'HH');\n      this.minute = format(now, 'mm');\n      this.second = format(now, 'ss');\n      this.milliseconds = format(now, 'SSS');\n      this.timestamp = now.getTime();\n\n      this.dateTime = {\n        year: this.year,\n        month: this.month,\n        day: this.day,\n        hour: this.hour,\n        minute: this.minute,\n        second: this.second,\n        milliseconds: this.milliseconds,\n        timezone: 'local'\n      }\n\n      this.dateTimeUTC = {\n        year: formatToTimeZone(now, 'yyyy', {timeZone: 'UTC'}),\n        month: formatToTimeZone(now, 'MM' , {timeZone: 'UTC'}),\n        day: formatToTimeZone(now, 'dd', {timeZone: 'UTC'}),\n        hour: formatToTimeZone(now, 'HH', {timeZone: 'UTC'}),\n        minute: formatToTimeZone(now, 'mm', {timeZone: 'UTC'}),\n        second: formatToTimeZone(now, 'ss', {timeZone: 'UTC'}),\n        milliseconds: formatToTimeZone(now, 'SSS', {timeZone: 'UTC'}),\n        timezone: 'UTC'\n      }\n\n      this.dateTimeLocal = {\n        year: this.year,\n        month: this.month,\n        day: this.day,\n        hour: this.hour,\n        minute: this.minute,\n        second: this.second,\n        milliseconds: this.milliseconds,\n        timezone: null\n      }\n    }, 500)\n  }\n\n  // f() {\n\n  //   new Date('2020-02-28T00:00:00.000Z')\n  //   new Date(1610979315212)\n\n  //   new Date('2020-02-28T00:00:00.000').toISOString()\n  //   // output ??? depends on the local timezone\n\n  //   new Date('2020-02-28T00:00:00.000+07:00').toISOString()\n  //   // output 2020-02-27T17:00:00.000Z\n\n  // }\n}\n","<div class=\"container center\">\n  <h1 class=\"fixed-title\">ISO 8601</h1>\n  <!-- <h1>{{dateTimeCustom}}</h1> -->\n  <div class=\"article\">\n    <p class=\"title\">Full date</p>\n    <date-time [dateTime]=\"dateTimeUTC\"></date-time>\n  </div>\n\n  <div class=\"article\">\n    <p class=\"title\">Full date</p>\n    <date-time [dateTime]=\"dateTime\"></date-time>\n  </div>\n\n  <div class=\"article\">\n    <p class=\"title\">Timestamp</p>\n    <date-time [timestamp]=\"timestamp\"></date-time>\n  </div>\n\n  <div class=\"article\">\n    <p class=\"title\">Not a full date</p>\n    <date-time [dateTime]=\"dateTimeLocal\"></date-time>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DateTimeComponent } from './date-time/date-time.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DateTimeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { format as formatOriginal, startOfDay, endOfDay } from 'date-fns';\nimport { zonedTimeToUtc, utcToZonedTime, format as formattz } from 'date-fns-tz';\nimport { enGB, fi } from 'date-fns/locale'\n\nconst locale = {\n  'en-GB': enGB,\n  'fi-FI': fi\n}\n\nexport const format = (date: Date | number, format: string, options?: any) => {\n  return formatOriginal(date, format, {\n    ...options,\n    locale: enGB\n  })\n}\n\nexport const formatToTimeZone = (date: any, formatStr: any, options: any) => {\n  return formattz(utcToZonedTime(date, options.timeZone), formatStr, {\n    ...options,\n    locale: enGB\n  });\n};\n\nconst timezoneHelper = (dateFnsFn: any, date: any, tz: any) => {\n  const localTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return zonedTimeToUtc(\n    formatOriginal(\n      dateFnsFn(\n        zonedTimeToUtc(\n          formatToTimeZone(date, 'yyyy-MM-dd HH:mm:ss', { timeZone: tz }),\n          localTimezone\n        )\n      ),\n      'yyyy-MM-dd HH:mm:ss'\n    ),\n    tz\n  );\n};\nexport const startOfDaytz = (date: Date | number, tz: string) => {\n  return timezoneHelper(startOfDay, date, tz);\n};\nexport const endOfDaytz = (date: Date | number, tz: string) => {\n  return timezoneHelper(endOfDay, date, tz);\n};\nexport const isSameDaytz = (dateLeft: number | Date, dateRight: number | Date, tz: string) => {\n  if (startOfDaytz(dateLeft, tz).getTime() === startOfDaytz(dateRight, tz).getTime()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// (window as any).tzh = {\n//   formatToTimeZone,\n//   timezoneHelper,\n//   startOfDaytz,\n//   endOfDaytz,\n//   isSameDaytz\n// }","import { Component, Input, OnInit } from '@angular/core';\nimport { format } from 'date-fns'\n\n@Component({\n  selector: 'date-time',\n  templateUrl: './date-time.component.html',\n})\nexport class DateTimeComponent implements OnInit {\n  @Input() dateTime: {\n    year?: string;\n    month?: string;\n    day?: string;\n    hour?: string;\n    minute?: string;\n    second?: string;\n    milliseconds?: string;\n    timezone?: string;\n  } = {}\n\n  @Input() timestamp = 0;\n\n  ngOnInit() {\n  }\n}\n","<div *ngIf=\"!timestamp\" class=\"part\">\n  <span class=\"partial date\">\n    <span class=\"brace top\"></span>\n    <span class=\"des top\">Date Components</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">Year</span>\n      <!-- <span class=\"des bottom\">YY</span> -->\n      {{dateTime.year}}\n    </span>\n    <span class=\"sympol\">-</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">Month</span>\n      {{dateTime.month}}\n    </span>\n    <span class=\"sympol\">-</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">Day</span>\n      {{dateTime.day}}\n    </span>\n  </span>\n  <span class=\"partial T\">\n    <span class=\"brace top\"></span>\n    <span class=\"des top\">Separator</span>\n    <span class=\"partial small\">T</span>\n  </span>\n  <span class=\"partial time\">\n    <span class=\"brace top\"></span>\n    <span class=\"des top\">Time Components</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">Hour</span>\n      {{dateTime.hour}}\n    </span>\n    <span class=\"sympol\">:</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">Minute</span>\n      {{dateTime.minute}}\n    </span>\n    <span class=\"sympol\">:</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">Second</span>\n      {{dateTime.second}}\n    </span>\n    <span class=\"sympol\">.</span>\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">milliseconds</span>\n      {{dateTime.milliseconds}}\n    </span>\n  </span>\n  <span *ngIf=\"dateTime.timezone\" class=\"partial timezone\" style=\"margin-left: 10px; min-width: 55px;\">\n    <span class=\"brace top\"></span>\n    <span class=\"des top\">Time zone</span>\n    <span *ngIf=\"dateTime.timezone === 'UTC'\" class=\"partial small\">Z</span>\n    <ng-container *ngIf=\"dateTime.timezone === 'local'\">\n      <span class=\"sympol\">+</span>\n      <span class=\"partial\">07</span>\n      <span class=\"sympol\">:</span>\n      <span class=\"partial\">00</span>\n    </ng-container>\n  </span>\n</div>\n\n<div *ngIf=\"timestamp\"  class=\"part\">\n  <span class=\"partial time\">\n    <span class=\"partial\">\n      <span class=\"brace bottom\"></span>\n      <span class=\"des bottom\">milliseconds</span>\n      {{timestamp}}\n    </span>\n  </span>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}